Linux命令   
拉链表
seondrednamenode
clickhouse 建表插入，优缺点，问题，优化
habse  为什么选择   
1.对很多字段的宽表支持比较好
2.扩展性比较强，可以增加新的reginonServer ，HBASE基于hdfs，可以存储海量数据
3.同事对HBASE比较熟悉
二级索引
将索引列拼接上原表的rowkey作为索引表的索引，提高检索查询效率
rowkey
唯一原则，设计时必须保证唯一
长度原则，一般设计rowkey不超过16字节，不然会降低检索效率
散列原则，rowkey应均匀的分布在各个region上
反转时间戳常用
yarn资源配置
每个NM给容器分配的总内存为总内存减去其他服务所需的内存
分配给容器的核数为内存的1/4
每个容器可使用的最大内存为16G


目标日期大于等于开始日期，小于等于结束日期


项目进度

扮演的角色做了哪些事情
离线：采集通道环境搭建，数仓分层建模，指标计算，数仓维护或故障分析（小文件问题解决，数据倾斜问题解决）
实时：运行环境搭建，数仓分层建模，指标计算，性能优化（反压问题，数据倾斜问题，缓存数据库一致性问题，分区没数据）
画像：标签制作，通用任务开发，数据流转任务开发
有哪些人参与进来，
产品经理，项目经理，后端，测试
遇到的问题和最大的成长，
旁路缓存异步io
项目周期，
离线从环境搭建到初期指标计算完上线大约11个月左右
实时从环境搭建到初期指标计算完成上线大约6个月左右
攻坚周期
反压解决，一致性问题解决，20天左右

工作流程
项目经理提供需求文档，弄清楚需求怎么定义的，然后需求评估，项目经理把前端后端大数据集合开会，明确数据格式，数据类型，字段等，确保每个人理解的一致，开发完成后联调，我们确保数据的准确性，前后端保障数据源和BI不出问题，最后测试对整个系统进行测试，测试通过后再上线

每天做什么
有新的指标就开会讨论然后做新的指标，没有就对数仓进行维护故障分析和对一些不满足需求的表增加一些字段，还有一些临时任务

对数仓的理解：数仓首先是仓库，存储数据的仓库，也是一个可以反映历史变化的数据集合，其次在维度建模后我们可以把数据分门别类的保存在不同的数据层中，便于数据的应用和管理，每一层数据都有不同的用途